<?php

/**
 * @file
 * Primary module hooks for Diary Modal module.
 */

function diary_modal_theme($existing, $type, $theme, $path)
{
    return [
        'diary_modal_block' => [
            'variables' => [
                'link' => '',
                'current_user_id' => '',
            ],
        ],
    ];
}

function diary_modal_preprocess_views_view__pokemon_diary(&$variables)
{
    $customblock = \Drupal::service('plugin.manager.block')->createInstance('diary_modal_block', []);
    if (isset($customblock) && !empty($customblock)) {
        $variables['diaryModal'] = $customblock->build();
    }
}

function diary_modal_form_node_diary_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id): void
{
    // Check if this is not a front-end page request. ie. in a modal
    if (Drupal::request()->isXmlHttpRequest()) {
        $form['advanced']['#access'] = FALSE;
        $form['actions']['preview']['#access'] = FALSE;

        // Add close button.
        $form['actions']['close'] = [
            '#type' => 'link',
            '#title' => t('Close'),
            '#url' => Drupal\Core\Url::fromRoute('<current>'),
            '#attributes' => [
                'class' => ['use-ajax-close', 'button', 'button--secondary'],
            ],
        ];
    }

    $form['actions']['submit']['#submit'][] = 'node_diary_custom_submit_redirect';
    $form['#attached']['library'][] = 'diary_modal/diary_modal.libraries';

}

/**
 * Submit callback function to redirect to a view after submitting the node form.
 */
function node_diary_custom_submit_redirect(&$form, \Drupal\Core\Form\FormStateInterface $form_state)
{
    // Redirect to a view after node creation.
    $form_state->setRedirect('view.pokemon_diary.page_1');
}
