<?php

declare(strict_types=1);

/**
 * @file
 * Functions to support theming in the Luigimon theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function luigimon_preprocess_html(array &$variables): void
{
}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function luigimon_preprocess_page(array &$variables): void
{
    $route = \Drupal::routeMatch()->getRouteName();
    $variables['is_pokemon_diary'] = $route == 'view.pokemon_diary.page_1';
    $current_path = \Drupal::service('path.current')->getPath();
    $variables['show_bg'] = $current_path == "/user/login" || $current_path == "/user/register" || $current_path == "/user/password" ? TRUE : FALSE;
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function luigimon_preprocess_node(array &$variables): void
{
}

/**
 *
 */
function luigimon_form_user_login_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id): void
{
    $form['forgot_password_link'] = [
        '#type' => 'link',
        '#title' => t('Forgot password?'),
        '#url' => \Drupal\Core\Url::fromRoute('user.pass'),
    ];

    $form['actions']['sign_up_link'] = [
        '#type' => 'link',
        '#title' => t('Sign up'),
        '#url' => \Drupal\Core\Url::fromRoute('user.register'),
        '#attributes' => [
            'class' => [
                'button',
                'button-action',
                'button--primary',
            ],
        ]
    ];
}

function luigimon_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id): void
{
    $form['actions']['submit']['#value'] = t('Sign up');

    $form['actions']['log_in_link'] = [
        '#type' => 'link',
        '#title' => t('Back to Login'),
        '#url' => \Drupal\Core\Url::fromRoute('user.login'),
        '#attributes' => [
            'class' => [
                'button',
                'button-action',
                'button--primary',
            ],
        ],
        '#weight' => 10,
    ];
}

function luigimon_form_user_pass_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id): void
{
    $form['actions']['log_in_link'] = [
        '#type' => 'link',
        '#title' => t('Back to Login'),
        '#url' => \Drupal\Core\Url::fromRoute('user.login'),
        '#attributes' => [
            'class' => [
                'button',
                'button-action',
                'button--primary',
            ],
        ],
        '#weight' => 10,
    ];
}

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function luigimon_preprocess_field__node__field_pokemon_id(array &$variables): void
{
    if (strlen($variables['items'][0]['content']['#markup']) < 4) {
        $variables['items'][0]['content']['#markup'] = '<div class="custom-field">' . str_pad($variables['items'][0]['content']['#markup'], 4, '0', STR_PAD_LEFT) . '</div>';
    }
}

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function luigimon_preprocess_page_title(array &$variables): void
{
    // Get the current route match
    $route_match = \Drupal::routeMatch();

    // Check if the current route is a user profile page
    if ($route_match->getRouteName() == 'entity.user.canonical') {
        // Get the user entity from the route match
        $user = $route_match->getParameter('user');

        // Check if the user object exists
        if ($user instanceof \Drupal\user\Entity\User) {
            $variables['title'] = $user->getDisplayName() . "'s Profile";
        }
    }

    if ($route_match->getRouteName() == 'view.pokemon_diary.page_1') {
        $user = \Drupal\user\Entity\User::load($route_match->getParameter('arg_0'));

        // Check if the user object exists
        if ($user instanceof \Drupal\user\Entity\User) {
            $variables['title'] = $user->getDisplayName() . "'s Pok√©dex";
        }
    }
}